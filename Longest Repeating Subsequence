#include<bits/stdc++.h>
using namespace std;

class Solution {
	public:
	int longrepeat(int m,int n,string s1,string s2)
	{
        vector<vector<int>>dp(m+1,vector<int>(n+1));
		    for(int i=0;i<=m;i++)
		    {
		        for(int j=0;j<=n;j++)
		        {
		            if(i==0 ||j==0)
		            dp[i][j]=0;
		            
		            else if(s1[i-1]==s2[j-1] && i!=j)
		            dp[i][j]=1+dp[i-1][j-1];
		            
		            else
		            dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
		        }
		    }
		    return dp[m][n];
	}
		int LongestRepeatingSubsequence(string str){
		    
		    int n=str.size(); 
		   return  longrepeat(n,n,str,str);
		}
};


int main(){
	   string str;
	   cin >> str;
		Solution obj;
		int ans = obj.LongestRepeatingSubsequence(str);
		cout << ans << "\n";
	
	return 0;
}

