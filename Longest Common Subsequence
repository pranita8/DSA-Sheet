#include<bits/stdc++.h>
using namespace std;
class solution{
public:
int commonsubsequence(int m,int n,string s1,string s2)
{
    vector<vector<int>>dp(m+1,vector<int>(n+1));
    
        for(int i=1;i<=m;i++)
        {
            for(int j=1;j<=n;j++)
            {
                dp[i][j]=-1;
            }
        }
    
   return lcs(m,n,s1,s2,dp);
}
int lcs(int m,int n, string s1,string s2,vector<vector<int>>&dp)
{
    if(m==0 ||n==0)
    return 0;

    if(dp[m][n]!=-1)
    return dp[m][n];

    if(s1.at(m-1)==s2.at(n-1))
    {
        dp[m][n]=1+lcs(m-1,n-1,s1,s2,dp);
        return dp[m][n]; 
    }
    else
    {
        return dp[m][n]=max(lcs(m,n-1,s1,s2,dp),lcs(m-1,n,s1,s2,dp));
    }
    
}
};
int main()
{
    int m,n;
    cin>>m>>n;
    string s1,s2;
    cin>>s1>>s2;
    solution obj;
    cout<<obj.commonsubsequence(m,n,s1,s2);
    return 0;
}
